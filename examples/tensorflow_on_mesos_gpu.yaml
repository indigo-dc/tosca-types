tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: TOSCA example for specifying a Mesos Cluster

topology_template:

  inputs:

    tensorflow_password:
      type: string
      description: Password for jupyter
      required: yes

    marathon_password:
      type: string
      description: Password for marathon admin user
      required: yes

    mesos_password:
      type: string
      description: Password for mesos admin user
      required: yes

  node_templates:

    tensorflow:
      type: tosca.nodes.indigo.TensorflowOnMesos
      properties:
        marathon_password: { get_input: marathon_password }
        marathon_host: { get_attribute: [ mesos_master_server, private_address, 0 ] }
        tensorflow_password: { get_input: tensorflow_password }
      requirements:
        - host: mesos_master


    mesos_master:
      type: tosca.nodes.indigo.MesosMaster
      properties:
        mesos_masters_list: { get_attribute: [ HOST, private_address ] }
        mesos_password: { get_input: mesos_password }
        marathon_password: { get_input: marathon_password }
        enable_chronos: false
        enable_consul_sd: false
        enable_gpu_support: true 
      requirements:
        - host: mesos_master_server

    mesos_slave:
      type: tosca.nodes.indigo.MesosSlave
      properties:
        master_ips: { get_attribute: [ mesos_master_server, private_address ] }
        front_end_ip: { get_attribute: [ mesos_master_server, private_address, 0 ] }
        enable_consul_sd: false
        enable_gpu_support: true 
      requirements:
        - host: mesos_slave_server
        
    mesos_load_balancer:
      type: tosca.nodes.indigo.MesosLoadBalancer
      properties:
        master_ips: { get_attribute: [ mesos_master_server, private_address ] }
        marathon_password: { get_input: marathon_password }
        enable_consul_sd: false
      requirements:
        - host: mesos_lb_server
        - dependency: mesos_master        

    mesos_master_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: mesosserverpublic
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: 2
            mem_size: 2 GB
        os:
          properties:
            image: ubuntu-16.04

    mesos_slave_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: 1
        host:
          properties:
            #num_cpus: 
            #mem_size:
            instance_type: g5.large 
        os:
          properties:
            image: ubuntu-16.04-cuda9
        
    mesos_lb_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              all_tcp:
                protocol: tcp
                source_range: [ 1, 65535 ]
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: 2
            mem_size: 2 GB
        os:
          properties:
            image: ubuntu-16.04    

  outputs:
    marathon_endpoint: 
      value: { concat: [ 'https://', get_attribute: [ mesos_lb_server, public_address, 0 ], ':8443' ] }
    jupyter_endpoint: 
      value: { concat: [ 'http://', get_attribute: [ mesos_lb_server, public_address, 0 ], ':10001' ] }
