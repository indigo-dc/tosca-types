tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: TOSCA example for specifying a Mesos Cluster

topology_template:

  inputs:
    slave_num:
      type: integer
      description: Maximum number of slaves in the elastic cluster
      default: 5
      required: yes

    marathon_password:
      type: string
      description: Password to configure user access to Marathon
      default: test_pass
      required: yes

    chronos_password:
      type: string
      description: Password to configure user access to Chronos
      default: test_pass
      required: yes

  node_templates:

    elastic_cluster_front_end:
      type: tosca.nodes.indigo.ElasticCluster
      properties:
        deployment_id: orchestrator_deployment_id
        iam_access_token: iam_access_token
        iam_clues_client_id: iam_clues_client_id
        iam_clues_client_secret: iam_clues_client_secret
        marathon_credentials:
          protocol: https
          token:  { get_input: marathon_password }
          user: admin
        chronos_credentials:
          protocol: https
          token:  { get_input: chronos_password }
          user: admin
      requirements:
        - lrms: mesos_master
        - wn: mesos_slave

    mesos_master:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Mesos
      properties:
        marathon_password: { get_input: marathon_password }
        chronos_password: { get_input: chronos_password }
      requirements:
        - host: mesos_master_server

    mesos_slave:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Mesos
      capabilities:
        wn:
          properties:
            max_instances: { get_input: slave_num }
            min_instances: 0
      properties:
        front_end_ip: { get_attribute: [ mesos_master_server, public_address, 0 ] }
        master_ips: { get_attribute: [ mesos_master_server, public_address ] }
      requirements:
        - host: mesos_slave_server

    mesos_load_balancer:
      type: tosca.nodes.indigo.MesosLoadBalancer
      properties:
        master_ips: { get_attribute: [ mesos_master_server, public_address ] }
        marathon_password: { get_input: marathon_password }
      requirements:
        - host: mesos_lb_server

    mesos_master_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: mesosserverpublic
            network_name: PUBLIC
            ports:
              mesos_port:
                protocol: tcp
                source: 5050
              marathon_port:
                protocol: tcp
                source: 8443
              chronos_port:
                protocol: tcp
                source: 4443
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: 2
            mem_size: 2 GB
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 16.04


    mesos_slave_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: 0
        host:
          properties:
            num_cpus: 1
            mem_size: 1 GB
        os:
          properties:
            type: linux
            distribution: ubuntu
            version: 16.04

    mesos_lb_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            network_name: PUBLIC
            ports:
              all_tcp:
                protocol: tcp
                source_range: [ 1, 65535 ]
        scalable:
          properties:
            count: 1
        host:
          properties:
            num_cpus: 1
            mem_size: 1 GB
        os:
          properties:
#            type: linux
#            distribution: ubuntu
#            version: 14.04
            image: linux-ubuntu-14.04-vmi

  outputs:
    mesos_lb_ips:
      value: { get_attribute: [ mesos_lb_server, public_address ] }
    mesos_master_ips:
      value: { get_attribute: [ mesos_master_server, public_address ] }
