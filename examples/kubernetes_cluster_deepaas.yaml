tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  TOSCA test for launching a Kubernetes Virtual Cluster.

topology_template:
  inputs:
    wn_num:
      type: integer
      description: Number of WNs in the cluster
      default: 1
      required: yes
    fe_cpus:
      type: integer
      description: Numer of CPUs for the front-end node
      default: 2
      required: yes
    fe_mem:
      type: scalar-unit.size
      description: Amount of Memory for the front-end node
      default: 4 GB
      required: yes
    wn_cpus:
      type: integer
      description: Numer of CPUs for the WNs
      default: 1
      required: yes
    wn_mem:
      type: scalar-unit.size
      description: Amount of Memory for the WNs
      default: 4 GB
      required: yes

    admin_username:
      type: string
      description: Username of the admin user
      default: kubeuser
    admin_token:
      type: string
      description: Access Token for the admin user
      default: not_very_secret_token

    dockerhub_img:
      type: string
      description: docker image from Docker Hub to deploy
      required: yes
    rclone_conf:
      type: string
      description: rclone.conf location
      required: no
      default: "/srv/.rclone.conf"
    rclone_url:
      type: string
      description: remote storage link to access via webdav
      default: ""
      required: no
    rclone_vendor:
      type: string
      description: rclone vendor
      required: no
      default: "nextcloud"
    rclone_user:
      type: string
      description: rclone user to access remote storage
      required: no
      default: ""
    rclone_pass:
      type: string
      description: rclone user password
      required: no
      default: ""

  node_templates:

    deepaas_app:
      type: tosca.nodes.SoftwareComponent
      requirements:
        - host: lrms_server
        - dependency: lrms_front_end
      interfaces:
        Standard:
          configure: 
            implementation: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/deepaas/deepaas.yml
            inputs:
              deepaas_dockerhub_img: { get_input: dockerhub_img }
              deepaas_rclone_conf: { get_input: rclone_conf }
              deepaas_rclone_type: webdav
              deepaas_rclone_url: { get_input: rclone_url }
              deepaas_rclone_vendor: { get_input: rclone_vendor }
              deepaas_rclone_user: { get_input: rclone_user }
              deepaas_rclone_pass: { get_input: rclone_pass }

    lrms_front_end:
      type: tosca.nodes.indigo.LRMS.FrontEnd.Kubernetes
      properties:
        admin_username:  { get_input: admin_username }
        admin_token: { get_input: admin_token }
      requirements:
        - host: lrms_server

    lrms_server:
      type: tosca.nodes.indigo.Compute
      capabilities:
        endpoint:
          properties:
            dns_name: kubeserver
            network_name: PUBLIC
            ports:
              deepaas_port:
                protocol: tcp
                source: 35000
              dashboard_port:
                protocol: tcp
                source: 30443
        host:
          properties:
            num_cpus: { get_input: fe_cpus }
            mem_size: { get_input: fe_mem }
        os:
          properties:
            image: linux-ubuntu-16.04-vmi
            #type: linux
            #distribution: ubuntu
            #version: 16.04

    wn_node:
      type: tosca.nodes.indigo.LRMS.WorkerNode.Kubernetes
      properties:
        front_end_ip: { get_attribute: [ lrms_server, private_address, 0 ] }
      requirements:
        - host: lrms_wn

    lrms_wn:
      type: tosca.nodes.indigo.Compute
      capabilities:
        scalable:
          properties:
            count: { get_input: wn_num }
        host:
          properties:
            num_cpus: { get_input: wn_cpus }
            mem_size: { get_input: wn_mem }
        os:
          properties:
            image: linux-ubuntu-16.04-vmi
            #type: linux
            #distribution: ubuntu
            #version: 16.04

  outputs:
    dashboard_url:
      value: { concat: [ 'https://', get_attribute: [ lrms_server, public_address, 0 ], ':30443/' ] }
    deepaas_url:
      value: { concat: [ 'http://', get_attribute: [ lrms_server, public_address, 0 ], ':35000/' ] }
