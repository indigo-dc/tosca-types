tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - indigo_custom_types: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/custom_types.yaml

description: >
  TOSCA examples for specifying a Chronos Job that uses Onedata space(s) to read/write data

topology_template:

  inputs:

    input_space_name:
      type: string
      description: Onedata space where the application input data are stored
      required: yes

    output_space_name:
      type: string
      description: Onedata space where the application output will be stored. It can be the same as the Input Onedata space
      required: yes
  
    input_path:
      type: string
      description: Path to the input data inside the Input Onedata space
      required: no
      default: ""

    output_path:
      type: string
      description: Path to the output data inside the Output Onedata space
      required: no
      default: ""

    output_filenames:
      type: string
      description: csv list of filenames generated by the application run
      default: ""
      required: no



  node_templates:

    chronos_job:
      type: tosca.nodes.indigo.Container.Application.Docker.Chronos
      properties:
        command: 'printenv'
        environment_variables:
          INPUT_ONEDATA_TOKEN: { get_attribute : [ input_onedata_space, token ] }
          INPUT_ONEDATA_PROVIDER: { get_attribute : [ input_onedata_space, selected_provider ] }
          OUTPUT_ONEDATA_TOKEN: { get_attribute : [ output_onedata_space, token ] }
          OUTPUT_ONEDATA_PROVIDER: { get_attribute : [ output_onedata_space, selected_provider ] }
          INPUT_ONEDATA_SPACE: { get_input: input_space_name }
          OUTPUT_ONEDATA_SPACE: { get_input: output_space_name }
          INPUT_PATH: { get_input: input_path }
          OUTPUT_PATH: { get_input: output_path }
          OUTPUT_FILENAMES: { get_input: output_filenames }
        retries: 1
      artifacts:
        image:
          file: ubuntu:16.04
          type: tosca.artifacts.Deployment.Image.Container.Docker
      requirements:
        - host: docker_runtime


    docker_runtime:
      type: tosca.nodes.indigo.Container.Runtime.Docker
      capabilities:
        host:
          properties:
            num_cpus: 1.0
            mem_size: 1 GB
    
    input_onedata_space:
      type: tosca.nodes.indigo.OnedataSpace
      properties:
        space: { get_input: input_space_name }
        smartScheduling: true

    output_onedata_space:
      type: tosca.nodes.indigo.OnedataSpace
      properties:
        space: { get_input: output_space_name }
        smartScheduling: true
    
